syntax = "proto3";

// protoc --go_out=plugins=grpc:. *.proto && sed -i "" -e "s/,omitempty//g" ./*.go
package pb;

import "google/protobuf/empty.proto";

message NodeInfo {

    message ProtocolVersion {
        string p2p = 3;
        string block = 1;
        string app = 2;
    }

    ProtocolVersion protocol_version = 8;
    string id = 1;
    string listen_addr = 2;
    string network = 3;
    string version = 4;
    string channels = 5;
    string moniker = 6;

    message Other {
        string tx_index = 2;
        string rpc_address = 1;
    }

    Other other = 7;
}

message NetInfoResponse {
    string jsonrpc = 3;
    string id = 1;

    message Result {
        bool listening = 4;
        repeated string listeners = 1;
        string n_peers = 2;

        message Peer {

            NodeInfo node_info = 4;

            bool is_outbound = 1;

            message ConnectionStatus {
                string Duration = 4;

                message Monitor {
                    bool Active = 13;
                    string Start = 1;
                    string Duration = 2;
                    string Idle = 3;
                    string Bytes = 4;
                    string Samples = 5;
                    string InstRate = 6;
                    string CurRate = 7;
                    string AvgRate = 8;
                    string PeakRate = 9;
                    string BytesRem = 10;
                    string TimeRem = 11;
                    double Progress = 12;
                }

                Monitor SendMonitor = 1;

                Monitor RecvMonitor = 2;

                message Channel {
                    double ID = 5;
                    string SendQueueCapacity = 1;
                    string SendQueueSize = 2;
                    string Priority = 3;
                    string RecentlySent = 4;
                }

                repeated Channel Channels = 3;
            }

            ConnectionStatus connection_status = 2;
            string remote_ip = 3;
        }

        repeated Peer peers = 3;
    }

    Result result = 2;
}

message StatusResponse {
    string jsonrpc = 3;
    string id = 1;

    message Result {
        string version = 7;
        string latest_block_hash = 1;
        string latest_app_hash = 2;
        string latest_block_height = 3;
        string latest_block_time = 4;
        string state_history = 5;

        message TmStatus {

            NodeInfo node_info = 3;

            message SyncInfo {
                string latest_block_hash = 5;
                string latest_app_hash = 1;
                string latest_block_height = 2;
                string latest_block_time = 3;
                bool catching_up = 4;
            }

            SyncInfo sync_info = 1;

            message ValidatorInfo {
                string address = 3;

                message PubKey {
                    string type = 2;
                    string value = 1;
                }

                PubKey pub_key = 1;
                string voting_power = 2;
            }

            ValidatorInfo validator_info = 2;
        }

        TmStatus tm_status = 6;
    }

    Result result = 2;

}

message PruneBlocksRequest {
    int64 from_height = 1;
    int64 to_height = 2;
}

message DealPeerRequest {
    string address = 1;
    bool persistent = 2;
}

service ManagerService {
    rpc Status (google.protobuf.Empty) returns (StatusResponse);
    rpc NetInfo (google.protobuf.Empty) returns (NetInfoResponse);
    rpc PruneBlocks (PruneBlocksRequest) returns (google.protobuf.Empty);
    rpc DealPeer (DealPeerRequest) returns (google.protobuf.Empty);
}